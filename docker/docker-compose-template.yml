services:
  app:
    image: ${REGISTRY:-localhost}/${SERVICE_NAME:-db-service}:${SERVICE_VERSION:-latest}
    container_name: ${SERVICE_NAME:-db-service}
    restart: always
    environment:
      - SERVICE_ENV=${DEPLOYMENT_ENV:-development}
      - JAVA_OPTS=-Xmx512m -Xms256m
      # Additional environment variables will be loaded from env file
    env_file:
      - ./${SERVICE_NAME:-db-service}.env
    ports:
      - "${PORT:-8080}:8080"
    volumes:
      - app-data:/app/data
      - app-logs:/app/logs
      # - ./config/${DEPLOYMENT_ENV:-development}/${SERVICE_NAME:-db-service}.conf:/app/config/application.conf
      - ./${SERVICE_NAME}.conf:/app/config/application.conf
      - ./${SERVICE_NAME:-db-service}.env:/app/.env
      - ./${SERVICE_NAME:-db-service}.env:/.env
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:${POSTGRES_VERSION:-14}
    container_name: ${SERVICE_NAME:-db-service}-postgres
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-app_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST_AUTH_METHOD=${POSTGRES_HOST_AUTH_METHOD:-trust}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    # Service-specific dependencies will be added by the deployment script
    # depends_on:
    #   - service1
    #   - service2

networks:
  app-network:
    external: true

volumes:
  app-data:
    name: ${SERVICE_NAME:-db-service}-data-${DEPLOYMENT_ENV:-development}
  app-logs:
    name: ${SERVICE_NAME:-db-service}-logs-${DEPLOYMENT_ENV:-development}
  postgres-data:
    name: ${SERVICE_NAME:-db-service}-postgres-data-${DEPLOYMENT_ENV:-development}
